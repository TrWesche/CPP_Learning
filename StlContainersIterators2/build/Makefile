# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  STD_Vector_config = debug
  STD_Array_config = debug
  STD_Deque_config = debug
  STD_FWDList_config = debug
  STD_List_config = debug
  STD_Pair_config = debug
  STD_Set_config = debug
  STD_Map_config = debug
  STD_Stack_config = debug
  STD_Queue_config = debug
  STD_PriorityQueue_config = debug
  Book_config = debug
  ProjectName_config = debug

else ifeq ($(config),release)
  STD_Vector_config = release
  STD_Array_config = release
  STD_Deque_config = release
  STD_FWDList_config = release
  STD_List_config = release
  STD_Pair_config = release
  STD_Set_config = release
  STD_Map_config = release
  STD_Stack_config = release
  STD_Queue_config = release
  STD_PriorityQueue_config = release
  Book_config = release
  ProjectName_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := STD_Vector STD_Array STD_Deque STD_FWDList STD_List STD_Pair STD_Set STD_Map STD_Stack STD_Queue STD_PriorityQueue Book ProjectName

.PHONY: all clean help $(PROJECTS) Core Dependencies

all: $(PROJECTS)

Core: ProjectName

Dependencies: Book STD_Array STD_Deque STD_FWDList STD_List STD_Map STD_Pair STD_PriorityQueue STD_Queue STD_Set STD_Stack STD_Vector

STD_Vector:
ifneq (,$(STD_Vector_config))
	@echo "==== Building STD_Vector ($(STD_Vector_config)) ===="
	@${MAKE} --no-print-directory -C STD_Vector -f Makefile config=$(STD_Vector_config)
endif

STD_Array:
ifneq (,$(STD_Array_config))
	@echo "==== Building STD_Array ($(STD_Array_config)) ===="
	@${MAKE} --no-print-directory -C STD_Array -f Makefile config=$(STD_Array_config)
endif

STD_Deque:
ifneq (,$(STD_Deque_config))
	@echo "==== Building STD_Deque ($(STD_Deque_config)) ===="
	@${MAKE} --no-print-directory -C STD_Deque -f Makefile config=$(STD_Deque_config)
endif

STD_FWDList:
ifneq (,$(STD_FWDList_config))
	@echo "==== Building STD_FWDList ($(STD_FWDList_config)) ===="
	@${MAKE} --no-print-directory -C STD_FWDList -f Makefile config=$(STD_FWDList_config)
endif

STD_List:
ifneq (,$(STD_List_config))
	@echo "==== Building STD_List ($(STD_List_config)) ===="
	@${MAKE} --no-print-directory -C STD_List -f Makefile config=$(STD_List_config)
endif

STD_Pair:
ifneq (,$(STD_Pair_config))
	@echo "==== Building STD_Pair ($(STD_Pair_config)) ===="
	@${MAKE} --no-print-directory -C STD_Pair -f Makefile config=$(STD_Pair_config)
endif

STD_Set:
ifneq (,$(STD_Set_config))
	@echo "==== Building STD_Set ($(STD_Set_config)) ===="
	@${MAKE} --no-print-directory -C STD_Set -f Makefile config=$(STD_Set_config)
endif

STD_Map:
ifneq (,$(STD_Map_config))
	@echo "==== Building STD_Map ($(STD_Map_config)) ===="
	@${MAKE} --no-print-directory -C STD_Map -f Makefile config=$(STD_Map_config)
endif

STD_Stack:
ifneq (,$(STD_Stack_config))
	@echo "==== Building STD_Stack ($(STD_Stack_config)) ===="
	@${MAKE} --no-print-directory -C STD_Stack -f Makefile config=$(STD_Stack_config)
endif

STD_Queue:
ifneq (,$(STD_Queue_config))
	@echo "==== Building STD_Queue ($(STD_Queue_config)) ===="
	@${MAKE} --no-print-directory -C STD_Queue -f Makefile config=$(STD_Queue_config)
endif

STD_PriorityQueue:
ifneq (,$(STD_PriorityQueue_config))
	@echo "==== Building STD_PriorityQueue ($(STD_PriorityQueue_config)) ===="
	@${MAKE} --no-print-directory -C STD_PriorityQueue -f Makefile config=$(STD_PriorityQueue_config)
endif

Book:
ifneq (,$(Book_config))
	@echo "==== Building Book ($(Book_config)) ===="
	@${MAKE} --no-print-directory -C Book -f Makefile config=$(Book_config)
endif

ProjectName: STD_Vector STD_Array STD_Deque STD_FWDList STD_List STD_Pair STD_Set STD_Map STD_Stack STD_Queue STD_PriorityQueue Book
ifneq (,$(ProjectName_config))
	@echo "==== Building ProjectName ($(ProjectName_config)) ===="
	@${MAKE} --no-print-directory -C ProjectName -f Makefile config=$(ProjectName_config)
endif

clean:
	@${MAKE} --no-print-directory -C STD_Vector -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Array -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Deque -f Makefile clean
	@${MAKE} --no-print-directory -C STD_FWDList -f Makefile clean
	@${MAKE} --no-print-directory -C STD_List -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Pair -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Set -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Map -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Stack -f Makefile clean
	@${MAKE} --no-print-directory -C STD_Queue -f Makefile clean
	@${MAKE} --no-print-directory -C STD_PriorityQueue -f Makefile clean
	@${MAKE} --no-print-directory -C Book -f Makefile clean
	@${MAKE} --no-print-directory -C ProjectName -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   STD_Vector"
	@echo "   STD_Array"
	@echo "   STD_Deque"
	@echo "   STD_FWDList"
	@echo "   STD_List"
	@echo "   STD_Pair"
	@echo "   STD_Set"
	@echo "   STD_Map"
	@echo "   STD_Stack"
	@echo "   STD_Queue"
	@echo "   STD_PriorityQueue"
	@echo "   Book"
	@echo "   ProjectName"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"